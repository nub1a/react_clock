{"version":3,"sources":["components/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","this","timer","setInterval","console","log","toLocaleTimeString","setState","prevProps","clockName","props","clearInterval","React","Component","App","isClockVisible","showClock","hideClock","generateName","Math","ceil","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,MAAQC,aAAY,WACvB,IAAMJ,EAAO,IAAIC,KAGjBI,QAAQC,IAAIN,EAAKO,sBACjB,EAAKC,SAAS,CACZR,WAED,OAdP,gCAiBE,SAAmBS,GACbA,EAAUC,YAAcR,KAAKS,MAAMD,WAErCL,QAAQC,IAAR,8CAEIG,EAAUC,UAFd,eAE8BR,KAAKS,MAAMD,UAFzC,QApBN,kCA2BE,WACEE,cAAcV,KAAKC,SA5BvB,oBA+BE,WACE,OACE,oCACE,2CAEG,IACAD,KAAKH,MAAMC,KAAKO,2BArC3B,GAA2BM,IAAMC,YC6ClBC,E,4MA1CbhB,MAAQ,CACNiB,gBAAgB,EAChBN,UAAW,G,EAGbO,UAAY,kBAAM,EAAKT,SAAS,CAAEQ,gBAAgB,K,EAElDE,UAAY,kBAAM,EAAKV,SAAS,CAAEQ,gBAAgB,K,EAElDG,aAAe,kBAAM,EAAKX,SACxB,CAAEE,UAAWU,KAAKC,KAAqB,IAAhBD,KAAKE,a,4CAG9B,WAAU,IAAD,EAC+BpB,KAAKH,MAAnCiB,EADD,EACCA,eAAgBN,EADjB,EACiBA,UAExB,OACE,yBAAKa,UAAU,OACb,4BACEC,KAAK,SACLC,QAASvB,KAAKe,WAFhB,cAMA,4BACEO,KAAK,SACLC,QAASvB,KAAKgB,WAFhB,cAMA,4BACEM,KAAK,SACLC,QAASvB,KAAKiB,cAFhB,mBAMCH,GAAkB,kBAAC,EAAD,CAAON,UAAWA,S,GArC3BG,IAAMC,WCDxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.833c27f4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      const date = new Date();\n\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n      this.setState({\n        date,\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.clockName !== this.props.clockName) {\n      /* eslint-disable-next-line no-console */\n      console.log(\n        `The Clock was renamed from\n        ${prevProps.clockName} to ${this.props.clockName}.`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <>\n        <p>\n          Current time:\n          {' '}\n          {this.state.date.toLocaleTimeString()}\n        </p>\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  clockName: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Clock } from './components';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 1,\n  };\n\n  showClock = () => this.setState({ isClockVisible: true });\n\n  hideClock = () => this.setState({ isClockVisible: false });\n\n  generateName = () => this.setState(\n    { clockName: Math.ceil(Math.random() * 1000) },\n  );\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.generateName}\n        >\n          Set random name\n        </button>\n        {isClockVisible && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}